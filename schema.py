from mimesis.schema import Field, Fieldset
from mimesis.locales import Locale
import datetime


field = Field(Locale.EN, seed=0xff)
fieldset = Fieldset(Locale.EN, seed=0xff)
nowww = datetime.datetime.now()

start_id_range = 1
end_id_range = 1000000000
rand_id = False

def increment_counter(start):
    global start_id_range
    start_id_range += 1
    return start_id_range

ai_messages = lambda: {
    "id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment", accumulator="a"),
    "lead_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment", accumulator="b"),
    "question_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment", accumulator="c"),
    "from_who": field("integer_number", start=start_id_range, end=end_id_range),
    "employee_id": field("integer_number", start=start_id_range, end=end_id_range),
    "to_user_id": field("integer_number", start=start_id_range, end=end_id_range),
    "from_admin": field("integer_number", start=start_id_range, end=end_id_range),
    "req_language_id": field("integer_number", start=start_id_range, end=end_id_range),
    "res_language_id": field("integer_number", start=start_id_range, end=end_id_range),
    "delivery_type": field("integer_number", start=start_id_range, end=end_id_range),
    "webhook_req_id": field("integer_number", start=start_id_range, end=end_id_range),
    "units": field("integer_number", start=1, end=10),
    "answer_text": field("text.sentence"),
    "entities": field("text.sentence"),
    "read": field("integer_number", start=0, end=1),
    "use_ai": field("integer_number", start=0, end=1),
    "media_url": field("internet.stock_image_url"),
    "mime_type": field("text.word"),
    "sid": field("text.word"),
    "media_thumb": field("internet.stock_image_url"),
    "is_profile": field("integer_number", start=0, end=1),
    "MessageUUID": field("uuid"),
    "qtext": field("text.sentence"),
    "is_multiparts": field("integer_number", start=1, end=10),
    "ip": field("internet.ip_v4"),
    "status": field("integer_number", start=1, end=10),
    "msg_type": field("integer_number", start=1, end=10),
    "is_smart_alerted": field("integer_number", start=1, end=10),
    "smart_alert_users": field("text.sentence"),
    "data": field("text.sentence"),
    "created_at": nowww,
    "updated_at": nowww   
}

ai_message_note = lambda: {
    "id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment", accumulator="a"),
    "message_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment", accumulator="b"),
    "note_id": field("integer_number", start=1, end=1000000000),
}

ai_recorded_interview_messages = lambda: {
    "id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "uuid": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "created_at": nowww,
    "updated_at": nowww,
    "message_type": field("integer_number", start=1, end=1000000000),
    "message_id": field("integer_number", start=1, end=1000000000),
    "recorded_itv_candidate_id": field("integer_number", start=1, end=1000000000),
    "max_video_length": field("integer_number", start=1, end=1000000000),
    "media_type": field("integer_number", start=1, end=1000000000),
}

ai_interviews = lambda: {
    "id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "uuid": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "user_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "company_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "candidate_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "sub_itv_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "interview_duration": field("integer_number", start=1, end=100),
    "interview_type": field("integer_number", start=1, end=100),
    "interview_jobloc_id": field("integer_number", start=1, end=100),
    "primary_id": field("integer_number", start=1, end=100),
    "cal_event_id": field("integer_number", start=1, end=100),
    "status": field("integer_number", start=1, end=100),
    "deprecated_interview_type": field("integer_number", start=1, end=100),
    "users_calendar_data": field("integer_number", start=1, end=100),
    "created_at": nowww,
}

ai_lead_sub_itvs = lambda: {
    "id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "lead_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "created_at": nowww,
    "updated_at": nowww,
    "order": field("integer_number", start=1, end=100),
    "name": field("integer_number", start=1, end=100),
    "job_loc_room_id": field("integer_number", start=1, end=100),
    "interview_type": field("integer_number", start=1, end=100),
    "itv_location_string": field("integer_number", start=1, end=100),
    "interview_jobloc_id": field("integer_number", start=1, end=100),
    "interview_duration": field("integer_number", start=1, end=100),
    "pre_attendees": field("integer_number", start=1, end=100),
    "interviewer_ids": field("integer_number", start=1, end=100),
    "scheduled_at": nowww,
    "any_avail_room": field("integer_number", start=1, end=100),
    "deprecated_interview_type": field("integer_number", start=1, end=100),
    "deleted_at": nowww,
    "deleted_by": field("integer_number", start=1, end=100),
    "is_deleted": field("integer_number", start=1, end=100),
    "_user_chosen_slots": field("integer_number", start=1, end=100),
}

ai_leads = lambda: {
    "created_at": nowww,
    "updated_at": nowww,
    "id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "uuid": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "job_loc_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "name": field("integer_number", start=1, end=100), 
    "email": field("integer_number", start=1, end=100), 
    "phone_number": field("integer_number", start=1, end=100), 
    "status": field("integer_number", start=1, end=100), 
    "last_viewed_at": field("integer_number", start=1, end=100), 
    "total_views": field("integer_number", start=1, end=100), 
    "group_id": field("integer_number", start=1, end=100), 
    "responsed": field("integer_number", start=1, end=100), 
    "last_question_id": field("integer_number", start=1, end=100), 
    "next_question_id": field("integer_number", start=1, end=100), 
    "reported": field("integer_number", start=1, end=100), 
    "start_kw": field("integer_number", start=1, end=100), 
    "apply_number": field("integer_number", start=1, end=100), 
    "completed": field("integer_number", start=1, end=100), 
    "recruiter_idle_at": field("integer_number", start=1, end=100), 
    "source": field("integer_number", start=1, end=100), 
    "read": field("integer_number", start=1, end=100), 
    "called": field("integer_number", start=1, end=100), 
    "emailed": field("integer_number", start=1, end=100), 
    "texted": field("integer_number", start=1, end=100), 
    "viewed": field("integer_number", start=1, end=100), 
    "company_id": field("integer_number", start=1, end=100), 
    "tz_str": field("integer_number", start=1, end=100), 
    "edited_name": field("integer_number", start=1, end=100), 
    "MessageUUID": field("integer_number", start=1, end=100), 
    "cp_kw": field("integer_number", start=1, end=100), 
    "is_valid": field("integer_number", start=1, end=100), 
    "daily_alerted": field("integer_number", start=1, end=100), 
    "interviewed": field("integer_number", start=1, end=100), 
    "scheduled_at": field("integer_number", start=1, end=100), 
    "interview_duration": field("integer_number", start=1, end=100), 
    "slots": field("integer_number", start=1, end=100), 
    "schedule_by": field("integer_number", start=1, end=100), 
    "calendar_tz": field("integer_number", start=1, end=100), 
    "jobloc_ids": field("integer_number", start=1, end=100), 
    "location_number": field("integer_number", start=1, end=100), 
    "ask_zipcode": field("integer_number", start=1, end=100), 
    "candidate_location_info": field("integer_number", start=1, end=100), 
    "latitude": field("integer_number", start=1, end=100), 
    "longitude": field("integer_number", start=1, end=100), 
    "zipcode": field("integer_number", start=1, end=100), 
    "res_as_ai": field("integer_number", start=1, end=100), 
    "conversation_id": field("integer_number", start=1, end=100), 
    "unique_email": field("integer_number", start=1, end=100), 
    "view_more_offset": field("integer_number", start=1, end=100), 
    "total_locs": field("integer_number", start=1, end=100), 
    "work_place": field("integer_number", start=1, end=100), 
    "work_area_code": field("integer_number", start=1, end=100), 
    "interview_jobloc_id": field("integer_number", start=1, end=100), 
    "interview_type": field("integer_number", start=1, end=100), 
    "past_interview_at": field("integer_number", start=1, end=100), 
    "long_id": field("integer_number", start=1, end=100), 
    "signatures": field("integer_number", start=1, end=100), 
    "referrer": field("integer_number", start=1, end=100), 
    "unsubscribed": field("integer_number", start=1, end=100), 
    "kb_on": field("integer_number", start=1, end=100), 
    "interview_group": field("integer_number", start=1, end=100), 
    "em_reported": field("integer_number", start=1, end=100), 
    "referred_by": field("integer_number", start=1, end=100), 
    "web_id": field("integer_number", start=1, end=100), 
    "interviewer_ids": field("integer_number", start=1, end=100), 
    "added_by": field("integer_number", start=1, end=100), 
    "interview_excluded": field("integer_number", start=1, end=100), 
    "fb_page_id": field("integer_number", start=1, end=100), 
    "fb_sender_id": field("integer_number", start=1, end=100), 
    "inquiry_detection": field("integer_number", start=1, end=100), 
    "unsubscribed_email": field("integer_number", start=1, end=100), 
    "ip_location_name": field("integer_number", start=1, end=100), 
    "ip_location_updated": field("integer_number", start=1, end=100), 
    "job_loc_room_id": field("integer_number", start=1, end=100), 
    "interview_instructions": field("integer_number", start=1, end=100), 
    "opt_in_status": field("integer_number", start=1, end=100), 
    "external_source_id": field("integer_number", start=1, end=100), 
    "cancelled_by_recruiter": field("integer_number", start=1, end=100), 
    "fb_status": field("integer_number", start=1, end=100), 
    "pre_attendees": field("integer_number", start=1, end=100), 
    "past_interviewer_ids": field("integer_number", start=1, end=100), 
    "gdpr_accepted_at": field("integer_number", start=1, end=100), 
    "is_gdpr": field("integer_number", start=1, end=100), 
    "recent_fr_phone_number": field("integer_number", start=1, end=100), 
    "recent_ai_phone_number": field("integer_number", start=1, end=100), 
    "removed_at": field("integer_number", start=1, end=100), 
    "outbound_accepted": field("integer_number", start=1, end=100), 
    "wc_official_id": field("integer_number", start=1, end=100), 
    "wc_sender_id": field("integer_number", start=1, end=100), 
    "wc_status": field("integer_number", start=1, end=100), 
    "language_code": field("integer_number", start=1, end=100), 
    "detect_language_code": field("integer_number", start=1, end=100), 
    "deprecated_ex_source": field("integer_number", start=1, end=100), 
    "apply_type": field("integer_number", start=1, end=100), 
    "ip_addr": field("integer_number", start=1, end=100), 
    "company_group_id": field("integer_number", start=1, end=100), 
    "recent_fr_whatsapp_number": field("integer_number", start=1, end=100), 
    "current_language_code": field("integer_number", start=1, end=100), 
    "latest_source": field("integer_number", start=1, end=100), 
    "is_valid_start_kw": field("integer_number", start=1, end=100), 
    "primary_contact_method": field("integer_number", start=1, end=100), 
    "opt_status": field("integer_number", start=1, end=100), 
    "free_text_locations": field("integer_number", start=1, end=100), 
    "conversation_step": field("integer_number", start=1, end=100), 
    "is_campaign_responded": field("integer_number", start=1, end=100), 
    "interview_reminder_type": field("integer_number", start=1, end=100), 
    "itv_pending_invite": field("integer_number", start=1, end=100), 
    "itv_location_str": field("integer_number", start=1, end=100), 
    "pending_invite_owner_uid": field("integer_number", start=1, end=100), 
    "pending_invite_uid": field("integer_number", start=1, end=100), 
    "sc_phone_number_id": field("integer_number", start=1, end=100), 
    "itv_requested_at": field("integer_number", start=1, end=100), 
    "job_search_on": field("integer_number", start=1, end=100), 
    "engaged_job_search": field("integer_number", start=1, end=100), 
    "start_interaction_type": field("integer_number", start=1, end=100), 
    "shortcode_opt_in_status": field("integer_number", start=1, end=100), 
    "cal_url_renewed": field("integer_number", start=1, end=100), 
    "phone_country_cd": field("integer_number", start=1, end=100), 
    "matched_jobloc_id": field("integer_number", start=1, end=100), 
    "profile_id": field("integer_number", start=1, end=100), 
    "created_at_timestamp": field("integer_number", start=1, end=100), 
    "updated_at_timestamp": field("integer_number", start=1, end=100), 
    "last_contacted_at_timestamp": field("integer_number", start=1, end=100), 
    "deprecated_interview_type": field("integer_number", start=1, end=100), 
    "candidate_profile_id": field("integer_number", start=1, end=100), 
    "ex_source": field("integer_number", start=1, end=100), 
}

ai_lead_extra_data = lambda: {
    "id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "uuid": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "job_req_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "lead_id": field("integer_number", start=start_id_range, end=end_id_range) if rand_id else field("increment"),
    "eeo_gender": field("integer_number", start=1, end=100),  
    "eeo_race": field("integer_number", start=1, end=100),  
    "eeo_veteran_status": field("integer_number", start=1, end=100),  
    "ex_status": field("integer_number", start=1, end=100),  
    "hirevue_link": field("integer_number", start=1, end=100),  
    "pymetrics_link": field("integer_number", start=1, end=100),  
    "hired_date": field("integer_number", start=1, end=100),  
    "eeo_disability_status": field("integer_number", start=1, end=100),  
    "eeo_ethnicity": field("integer_number", start=1, end=100),  
    "apply_url": field("integer_number", start=1, end=100),  
    "shortlist_url": field("integer_number", start=1, end=100),  
    "application_id": field("integer_number", start=1, end=100),  
    "adp_link": field("integer_number", start=1, end=100),  
    "job_title": field("integer_number", start=1, end=100),  
    "audience_type": field("integer_number", start=1, end=100),  
    "campaign_code": field("integer_number", start=1, end=100),  
    "journey_candidate_status": field("integer_number", start=1, end=100),  
    "journey_stage_id": field("integer_number", start=1, end=100),  
    "journey_status_id": field("integer_number", start=1, end=100),  
    "candidate_token": field("integer_number", start=1, end=100),  
    "shift_preference": field("integer_number", start=1, end=100),  
    "hm_cid": field("integer_number", start=1, end=100),  
    "hirevue_instructions": field("integer_number", start=1, end=100),  
    "rating_id": field("integer_number", start=1, end=100),  
    "rating_on": field("integer_number", start=1, end=100),  
    "manager": field("integer_number", start=1, end=100),  
    "recruiter": field("integer_number", start=1, end=100),  
    "ta_coordinator": field("integer_number", start=1, end=100),  
    "interview_kind": field("integer_number", start=1, end=100),  
    "pymetrics_link_video": field("integer_number", start=1, end=100),  
    "itv_travel_required": field("integer_number", start=1, end=100),  
    "asked_phone_again": field("integer_number", start=1, end=100),  
    "received_phone_again": field("integer_number", start=1, end=100),  
    "itv_cancelled_by_candidate": field("integer_number", start=1, end=100),  
    "itv_complex_sequent": field("integer_number", start=1, end=100),  
    "itv_sequent_type": field("integer_number", start=1, end=100),  
    "itv_user_pick_time": field("integer_number", start=1, end=100),  
    "itv_user_pick_time_case": field("integer_number", start=1, end=100),  
    "itv_any_avail_room": field("integer_number", start=1, end=100),  
    "url_renewals": field("integer_number", start=1, end=100),  
    "itv_pending_scheduled": field("integer_number", start=1, end=100),  
    "itv_scheduling_method": field("integer_number", start=1, end=100),  
    "draft_event_id": field("integer_number", start=1, end=100),  
    "tracking_pixel_script": field("integer_number", start=1, end=100),  
    "workflow_tracking_pixel": field("integer_number", start=1, end=100),  
    "pending_sms_action": field("integer_number", start=1, end=100),  
    "company_user_id": field("integer_number", start=1, end=100),  
    "workflow_instruction_id": field("integer_number", start=1, end=100),  
    "assistant_id": field("integer_number", start=1, end=100),  
    "browser_fingerprint": field("integer_number", start=1, end=100),  
    "intelli_app_url": field("integer_number", start=1, end=100),  
    "consent_to_marketing": field("integer_number", start=1, end=100),  
    "user_chosen_slots": field("integer_number", start=1, end=100),  
    "external_info": field("integer_number", start=1, end=100),  
    "interview_src": field("integer_number", start=1, end=100),  
    "interview_state": field("integer_number", start=1, end=100),  
    "reschedule_times_count": field("integer_number", start=1, end=100),  
    "earliest_available_date": field("integer_number", start=1, end=100),  
    "enable_custom_tracking_pixel": field("integer_number", start=1, end=100),  
    "applicant_flow_id": field("integer_number", start=1, end=100),  
    "is_pending_manually_schedule": field("integer_number", start=1, end=100),  
    "workflow_task_tracking_pixel": field("integer_number", start=1, end=100),  
    "translate_on_fly_on": field("integer_number", start=1, end=100),  
    "is_removed_carrier_deactivated_phone": field("integer_number", start=1, end=100),  
    "multilingual_data": field("integer_number", start=1, end=100),  
}

schemas = {
    "ai_messages": ai_messages,
    "ai_message_note": ai_message_note,
    "ai_recorded_interview_messages": ai_recorded_interview_messages,
    "ai_interviews": ai_interviews,
    "ai_lead_sub_itvs": ai_lead_sub_itvs,
    "ai_leads": ai_leads
}

def get_schema(input_str):
    schema = schemas.get(input_str)
    
    if schema:
        return schema
    else:
        print("Schema not found")

def set_start_id_range(num):
    global start_id_range
    start_id_range = num

def set_end_id_range(num):
    global end_id_range
    end_id_range = num

def set_id_random(rand):
    global rand_id
    rand_id = rand